version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: securecore_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: securecore_db
      POSTGRES_USER: securecore_user
      POSTGRES_PASSWORD: securecore_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - securecore_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U securecore_user -d securecore_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # SecureCore Backend
  backend:
    build: .
    container_name: securecore_backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgre://securecore_user:securecore_password@postgres:5432/securecore_db
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production-docker
      NODE_ENV: development
      PORT: 3000
      FRONTEND_URL: http://localhost:5173
      ENCRYPTION_KEY: docker-32-char-encryption-key-!!
    ports:
      - "3000:3000"
    networks:
      - securecore_network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: securecore_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - securecore_network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  adminer:
    image: adminer:latest
    container_name: securecore_adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    networks:
      - securecore_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  securecore_network:
    driver: bridge